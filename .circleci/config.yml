# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - m2-cache-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - m2-cache-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: m2-cache-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test
      - run:
          name: webhook
          command: |
            SLACK_CHANNEL="#times_14bassy"
            SLACK_WEBHOOK_URL="https://hooks.slack.com/services/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"

            readonly DATA=$(echo "{\"channel\":\"${SLACK_CHANNEL}\",\"username\":\"${CIRCLE_USERNAME}\",\"text\":\"${CIRCLE_PROJECT_REPONAME}のビルドが完了しました。デプロイ可能です。\nアーティファクトを取得してください${CIRCLE_BUILD_URL}\"}")
            curl -X POST -H 'Content-type:application/json' --data $(echo "${DATA}") ${SLACK_WEBHOOK_URL}

